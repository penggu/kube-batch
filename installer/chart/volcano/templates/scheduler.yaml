apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-scheduler
  namespace: {{.Values.basic.namespace}}

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-scheduler
  namespace: {{.Values.basic.namespace}}
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["create", "get", "list", "watch", "delete"]
  - apiGroups: ["batch.volcano.sh"]
    resources: ["jobs"]
    verbs: ["get", "list", "watch", "update", "delete"]
  - apiGroups: ["batch.volcano.sh"]
    resources: ["jobs/status"]
    verbs: ["update", "patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["pods", "pods/status"]
    verbs: ["create", "get", "list", "watch", "update", "bind", "delete"]
  - apiGroups: [""]
    resources: ["pods/binding"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["list", "watch"]
  - apiGroups: ["scheduling.incubator.k8s.io"]
    resources: ["podgroups", "queues"]
    verbs: ["list", "watch", "update"]
  - apiGroups: ["scheduling.k8s.io"]
    resources: ["priorityclasses"]
    verbs: ["list", "watch", "update"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["list", "watch"]
  - apiGroups: ["policy"]
    resources: ["poddisruptionbudgets"]
    verbs: ["list", "watch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-scheduler-role
  namespace: {{.Values.basic.namespace}}
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-scheduler
    # replace with non-default namespace name
    namespace: default
roleRef:
  kind: ClusterRole
  name: {{ .Release.Name }}-scheduler
  apiGroup: rbac.authorization.k8s.io

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-scheduler
  namespace: {{.Values.basic.namespace}}
spec:
  replicas: 1
  selector:
    matchLabels:
      vk-scheduler: test
  template:
    metadata:
      labels:
        vk-scheduler: test
    spec:
      serviceAccount: {{ .Release.Name }}-scheduler
      {{ if .Values.basic.image_pull_secret }}
      imagePullSecrets:
        - name: {{ .Values.basic.image_pull_secret }}
      {{ end }}
      containers:
        - name: {{ .Release.Name }}-scheduler
          image: {{.Values.basic.scheduler_image_name}}:{{.Values.basic.image_tag_version}}
          args:
            - --alsologtostderr
            - -v=2
            - 2>&1
          imagePullPolicy: "IfNotPresent"
